{"mappings":"AAAA,MAAM,SAAS;AAEf,SAAS;IACL,MAAM,YAAY,SAAS,cAAc,CAAC;IAC1C,MAAM,kBAAkB,SAAS,cAAc,CAAC;IAChD,MAAM,oBAAoB,SAAS,cAAc,CAAC;IAClD,MAAM,OAAO,UAAU,KAAK;IAE5B,6BAA6B;IAC7B,MAAM,iBAAiB,CAAC,kDAAkD,EAAE,KAAK,OAAO,EAAE,OAAO,CAAC;IAClG,MAAM,gBACD,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC,CAAA;QACF,MAAM,cAAc,KAAK,KAAK;QAC9B,MAAM,WAAW,YAAY,GAAG;QAChC,MAAM,YAAY,YAAY,GAAG;QAEjC,+BAA+B;QAC/B,MAAM,cAAc,CAAC,0CAA0C,EAAE,SAAS,KAAK,EAAE,UAAU,CAAC;QAC5F,MAAM,aACD,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC,CAAA;YACF,6FAA6F;YAC7F,MAAM,WAAW,YAAY,CAAC,EAAE;YAEhC,oCAAoC;YACpC,MAAM,UAAU,CAAC,sCAAsC,EAAE,SAAS,CAAC;YACnE,MAAM,SACD,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC,CAAA;gBACF,MAAM,OAAO,IAAI,KAAK,SAAS,YAAY;gBAC3C,gBAAgB,WAAW,GAAG,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,KAAK,CAAC;gBAErE,wCAAwC;gBACxC,IAAI,gBAAgB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,qBAAqB,EAAE;gBAC3E,cAAc,IAAI,CAAC;gBACnB,aAAa,OAAO,CAAC,iBAAiB,KAAK,SAAS,CAAC;gBAErD,iCAAiC;gBACjC;YACJ,GACC,KAAK,CAAC,CAAA;gBACH,gBAAgB,WAAW,GAAG,CAAC,+BAA+B,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC;YACpF;QACR,GACC,KAAK,CAAC,CAAA;YACH,gBAAgB,WAAW,GAAG,CAAC,mCAAmC,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC;QACxF;IACR,GACC,KAAK,CAAC,CAAA;QACH,gBAAgB,WAAW,GAAG,CAAC,sCAAsC,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC;IAC3F;AACR;AAEA,SAAS;IACL,MAAM,oBAAoB,SAAS,cAAc,CAAC;IAClD,kBAAkB,SAAS,GAAG;IAE9B,IAAI,gBAAgB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,qBAAqB,EAAE;IAC3E,cAAc,OAAO,CAAC,CAAA;QAClB,MAAM,WAAW,SAAS,aAAa,CAAC;QACxC,SAAS,WAAW,GAAG;QACvB,kBAAkB,WAAW,CAAC;IAClC;AACJ;AAEA,8DAA8D;AAC9D","sources":["homework1/src/api_main_script.js"],"sourcesContent":["const apiKey = '768e0288406389e6e0f9840659813b24';\n\nfunction getTimeInCity() {\n    const cityInput = document.getElementById('cityInput');\n    const resultParagraph = document.getElementById('result');\n    const searchHistoryList = document.getElementById('searchHistory');\n    const city = cityInput.value;\n\n    // Получаем координаты города\n    const coordinatesUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`;\n    fetch(coordinatesUrl)\n        .then(response => response.json())\n        .then(data => {\n            const coordinates = data.coord;\n            const latitude = coordinates.lat;\n            const longitude = coordinates.lon;\n\n            // Получаем таймзону для города\n            const timezoneUrl = `https://worldtimeapi.org/api/timezone?lat=${latitude}&lon=${longitude}`;\n            fetch(timezoneUrl)\n                .then(response => response.json())\n                .then(timezoneData => {\n                    // Используем первую найденную таймзону (можно дополнительно обработать, если есть несколько)\n                    const timezone = timezoneData[0];\n\n                    // Получаем время по таймзоне города\n                    const timeUrl = `https://worldtimeapi.org/api/timezone/${timezone}`;\n                    fetch(timeUrl)\n                        .then(response => response.json())\n                        .then(timeData => {\n                            const time = new Date(timeData.utc_datetime);\n                            resultParagraph.textContent = `Current time in city ${city}: ${time}`;\n                            \n                            // Сохраняем город в локальное хранилище\n                            let searchHistory = JSON.parse(localStorage.getItem('searchHistory')) || [];\n                            searchHistory.push(city);\n                            localStorage.setItem('searchHistory', JSON.stringify(searchHistory));\n\n                            // Выводим историю поиска городов\n                            displaySearchHistory();\n                        })\n                        .catch(error => {\n                            resultParagraph.textContent = `Couldn't get time for the city ${city}: ${error}`;\n                        });\n                })\n                .catch(error => {\n                    resultParagraph.textContent = `Couldn't get timezone for the city ${city}: ${error}`;\n                });\n        })\n        .catch(error => {\n            resultParagraph.textContent = `Couldn't get coordinates for the city ${city}: ${error}`;\n        });\n}\n\nfunction displaySearchHistory() {\n    const searchHistoryList = document.getElementById('searchHistory');\n    searchHistoryList.innerHTML = '';\n\n    let searchHistory = JSON.parse(localStorage.getItem('searchHistory')) || [];\n    searchHistory.forEach(city => {\n        const listItem = document.createElement('li');\n        listItem.textContent = city;\n        searchHistoryList.appendChild(listItem);\n    });\n}\n\n// Инициализация: выводим историю поиска при загрузке страницы\ndisplaySearchHistory();"],"names":[],"version":3,"file":"index_4.bbf5c6f3.js.map","sourceRoot":"/__parcel_source_root/"}